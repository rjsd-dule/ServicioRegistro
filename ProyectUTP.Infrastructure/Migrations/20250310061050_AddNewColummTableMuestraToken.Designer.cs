// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProyectUTP.Infrastructure;

#nullable disable

namespace ProyectUTP.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250310061050_AddNewColummTableMuestraToken")]
    partial class AddNewColummTableMuestraToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Soil")
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProyectUTP.Domain.Identity.Entities.MuestraToke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreadoPor")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaUltimaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("text");

                    b.Property<int?>("StatusId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoCultivoId")
                        .HasColumnType("integer");

                    b.Property<string>("TokenValue")
                        .HasColumnType("text");

                    b.Property<int?>("UbicacionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TipoCultivoId");

                    b.ToTable("MuestraToke", "Soil");
                });

            modelBuilder.Entity("ProyectUTP.Domain.Identity.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreadoPor")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaUltimaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Status", "Soil");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreadoPor = "Sistema",
                            FechaCreacion = new DateTime(2025, 3, 10, 6, 10, 50, 504, DateTimeKind.Utc).AddTicks(5003),
                            Name = "Activo"
                        },
                        new
                        {
                            Id = 2,
                            CreadoPor = "Sistema",
                            FechaCreacion = new DateTime(2025, 3, 10, 6, 10, 50, 504, DateTimeKind.Utc).AddTicks(5011),
                            Name = "Inactivo"
                        },
                        new
                        {
                            Id = 3,
                            CreadoPor = "Sistema",
                            FechaCreacion = new DateTime(2025, 3, 10, 6, 10, 50, 504, DateTimeKind.Utc).AddTicks(5013),
                            Name = "En Proceso de analisis"
                        },
                        new
                        {
                            Id = 4,
                            CreadoPor = "Sistema",
                            FechaCreacion = new DateTime(2025, 3, 10, 6, 10, 50, 504, DateTimeKind.Utc).AddTicks(5015),
                            Name = "Aceptado"
                        },
                        new
                        {
                            Id = 5,
                            CreadoPor = "Sistema",
                            FechaCreacion = new DateTime(2025, 3, 10, 6, 10, 50, 504, DateTimeKind.Utc).AddTicks(5016),
                            Name = "Rechazado"
                        },
                        new
                        {
                            Id = 6,
                            CreadoPor = "Sistema",
                            FechaCreacion = new DateTime(2025, 3, 10, 6, 10, 50, 504, DateTimeKind.Utc).AddTicks(5017),
                            Name = "Revisado"
                        },
                        new
                        {
                            Id = 7,
                            CreadoPor = "Sistema",
                            FechaCreacion = new DateTime(2025, 3, 10, 6, 10, 50, 504, DateTimeKind.Utc).AddTicks(5019),
                            Name = "En revisión"
                        },
                        new
                        {
                            Id = 8,
                            CreadoPor = "Sistema",
                            FechaCreacion = new DateTime(2025, 3, 10, 6, 10, 50, 504, DateTimeKind.Utc).AddTicks(5020),
                            Name = "Analisis Finalizado"
                        },
                        new
                        {
                            Id = 9,
                            CreadoPor = "Sistema",
                            FechaCreacion = new DateTime(2025, 3, 10, 6, 10, 50, 504, DateTimeKind.Utc).AddTicks(5022),
                            Name = "Suspendido"
                        });
                });

            modelBuilder.Entity("ProyectUTP.Domain.Identity.Entities.TipoCultivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CicloDeCultivo")
                        .HasColumnType("integer");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaCosecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaSiembra")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaUltimaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("text");

                    b.Property<string>("NombreCultivo")
                        .HasColumnType("text");

                    b.Property<string>("PHRecomendado")
                        .HasColumnType("text");

                    b.Property<string>("RequerimientosClimaticos")
                        .HasColumnType("text");

                    b.Property<int?>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("Temporada")
                        .HasColumnType("text");

                    b.Property<string>("TipoDeSuelo")
                        .HasColumnType("text");

                    b.Property<int?>("Ubicacionid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("Ubicacionid");

                    b.ToTable("TipoCultivo", "Soil");
                });

            modelBuilder.Entity("ProyectUTP.Domain.Identity.Entities.Ubicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EstadoProvincia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaUltimaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Latitud")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<decimal?>("Longitud")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("text");

                    b.Property<string>("NombreUbicacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ubicacion", "Soil");
                });

            modelBuilder.Entity("ProyectUTP.Domain.Identity.Entities.MuestraToke", b =>
                {
                    b.HasOne("ProyectUTP.Domain.Identity.Entities.Ubicacion", "TipoCultivo")
                        .WithMany()
                        .HasForeignKey("TipoCultivoId");

                    b.Navigation("TipoCultivo");
                });

            modelBuilder.Entity("ProyectUTP.Domain.Identity.Entities.TipoCultivo", b =>
                {
                    b.HasOne("ProyectUTP.Domain.Identity.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("ProyectUTP.Domain.Identity.Entities.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("Ubicacionid");

                    b.Navigation("Status");

                    b.Navigation("Ubicacion");
                });
#pragma warning restore 612, 618
        }
    }
}
